name: Run Tests (CI)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    services:
      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
        env:
          SERVICES: s3,secretsmanager,iam
          DEBUG: 1
          DATA_DIR: /tmp/localstack/data
          LOCALSTACK_API_KEY: ""


    env:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_REGION: us-east-1
      AWS_S3_BUCKET_NAME: pinup-test
      JAVA_TOOL_OPTIONS: >-
        -Daws.chunkedEncodingDisabled=true
        -Dcom.amazonaws.sdk.disableCertChecking=true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create application-test.yml
        run: |
          mkdir -p src/test/resources
          echo "${{ secrets.APPLICATION_TEST_YML }}" | base64 --decode > src/test/resources/application-test.yml

      - name: Install awslocal
        run: |
          pip install awscli-local

      - name: Initialize Secrets Manager
        run: |
          chmod +x .github/workflows/init-secrets.sh
          ./.github/workflows/init-secrets.sh 

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - run: chmod +x gradlew

      - name: Run tests
        run: |
          set -o pipefail
          ./gradlew test --console=plain --no-daemon --stacktrace | tee test-log.txt

      - name: 📄 Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests/test

      - name: 💬 PR Comment (Test Result)
        if: always()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: test-result
          message: |
            ${{ job.status == 'success' && '✅ 테스트 통과!' || '❌ 테스트 실패! 로그 확인 필요.' }}

      - name: 📄 실패 테스트 한 줄 요약
        if: failure()
        run: |
          echo "## ❌ 실패한 테스트 목록" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # 실패 줄 추출
          FAILED_LINES=$(grep "FAILED" test-log.txt | grep " > " || true)
          COUNT=$(echo "$FAILED_LINES" | grep -c '^' || echo 0)

          # 실패 수 표시
          echo "- 총 실패 테스트 수: **${COUNT}개**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # 목록 출력
          echo "$FAILED_LINES" | while read -r line; do
            echo "- ❌ ${line}" >> $GITHUB_STEP_SUMMARY
          done

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "_자세한 내용은 'Actions > Run logs' 를 확인하세요._" >> $GITHUB_STEP_SUMMARY
